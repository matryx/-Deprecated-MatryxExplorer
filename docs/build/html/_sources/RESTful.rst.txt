API
===

Activity
--------

**/activity/**
~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/activity

Response:

::

    {
        "activity": [
            {
                "news": "<publicAddress> created a new Tournament named 'Triton X-9000'"
            },
            {
                "news": "<publicAddress> opened their Tournament named 'Triton X-9000'"
            }
        ]
    }

The activity is generated by looking at events fired from the Matryx Platform on the blockchain.


Platform
--------

**/getLatestInfo**
~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/platform/getLatestInfo

Response:

::

    {
        "address": "<addressOfLatestPlatform>",
        "abi": []
    }

Where the abi value is a large ABI response in JSON parsed format.


**/getLatestAddress**
~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/platform/getLatestAddress

Response:

::

    {
        "address": "<addressOfLatestPlatform>"
    }


**/getLatestAbi**
~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/platform/getLatestAbi

Response:

::

    {
        "abi": []
    }

Where the abi value is a large ABI response in JSON parsed format.


**/getInfo/:version**
~~~~~~~~~~~~~~~~~~~~~

Where the :version param is the branch of the Matryx Platform you want to use
ie: master, QA, develop
It grabs it directly from the /build folder of http://github.com/matryx/MatryxPlatform

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/platform/getInfo/master

Response:

::

    {
        "abi": []
    }

Where the abi value is a large ABI response in JSON parsed format for that version of the Matryx Platform.


**/getAddress/:version**
~~~~~~~~~~~~~~~~~~~~~~~~

Where the :version param is the branch of the Matryx Platform you want to use
ie: master, QA, develop
It grabs it directly from the /build folder of http://github.com/matryx/MatryxPlatform

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/platform/getAddress/master

Response:

::

    {
        "address": "<EthereumAddressOfPlatform>"
    }


**/getAbi/:version**
~~~~~~~~~~~~~~~~~~~~

.. _curl-1:

Where the :version param is the branch of the Matryx Platform you want to use
ie: master, QA, develop
It grabs it directly from the /build folder of http://github.com/matryx/MatryxPlatform


Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/platform/getAbi/master

Response:

::

    {
        "abi": []
    }


Tournament
----------

**/tournaments/**
~~~~~~~~~~~~~~~~~

.. _curl-1:

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/

Response:

::

    {
      "data": [
        {
          "tournamentTitle": "title of the tournament",
          "mtx": 50,
          "tournamentOwner": "0x41b6f2fad14b9f2a67f2b9783bd74d2c258e033d"
          "tournamentDescription": "description of the tournament",
          "category": "math",
          "currentRound": 1,
          "numberOfParticipants": 1,
          "address": "0x8792123855cca07fcf57d623985e9f96ca34495d",
          "ipType": "",
          "externalAddress": "QmewXg6HCJ8kVcCKSrBXk8fawLru5Po3XaNgd4aGRrNa1N"
        }
      ]
    }


**/tournaments/count**
~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/count

Response:

::

    {
        "tournamentCount": 3
    }


**/tournaments/address/:tournamentAddress**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d

Response:

::

    {
        "tournamentDetails": {
            "tournamentTitle": "title of the tournament",
            "tournamentAddress": "0x8792123855cca07fcf57d623985e9f96ca34495d",
            "remainingMtx": 40,
            "mtx": 50,
            "authorName": "0x41b6f2fad14b9f2a67f2b9783bd74d2c258e033d",
            "tournamentDescription": "description of the tournament",
            "category": "math",
            "currentRound": 1,
            "currentRoundAddress": "0x7228373cb138d45cd7f12be3fe0a65928aad20c0",
            "numberOfParticipants": 1,
            "roundEndTime": 1529703263,
            "participationMTX": 2,
            "externalAddress": "QmewXg6HCJ8kVcCKSrBXk8fawLru5Po3XaNgd4aGRrNa1N",
            "ipType": ""
        }
    }


**/tournaments/address/:tournamentAddress/getOwner**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d/getOwner

Response:

::

    {
        "tournamentOwner": "0x41b6f2fad14b9f2a67f2b9783bd74d2c258e033d",
        "tournamentAddress": "0x8792123855cca07fcf57d623985e9f96ca34495d"
    }


**/tournaments/address/:tournamentAddress/submissionCount**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d/submissionCount

Response:

::

    {
        "results": 10
    }


**/tournaments/address/:tournamentAddress/currentRound**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d/currentRound

Response:

::

    {
        "currentRound": 1
    }


**/tournaments/address/:tournamentAddress/round/:roundId**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d/round/0

Response:

::

    {
        "data": {
            "tournamentTitle": "title of the tournament",
            "tournamentDescription": "description of the tournament",
            "tournamentAddress": "0x8792123855cca07fcf57d623985e9f96ca34495d",
            "roundMtx": 10,
            "roundStatus": "isOpen",
            "submissions": []
        }
    }


**/tournaments/address/:tournamentAddress/isEntrant/:address**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d/isEntrant/0x051d2a36630625eeb496b6b25ace6229401dd11f

Response:

::

    {
        "isEntrant": false
    }


**/tournaments/address/:tournamentAddress/allRoundAddresses**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Curl:

::

    curl -X GET http://explorer.matryx.ai:3000/tournaments/address/0x8792123855cca07fcf57d623985e9f96ca34495d/allRoundAddresses

Response:

::

    {
        "addresses": [
            "0x7228373cb138d45cd7f12be3fe0a65928aad20c0"
        ]
    }


Round
-----

Submission
----------

Interplanetary File System (IPFS)
---------------------------------
IPFS

Token
-----
